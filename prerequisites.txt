1. LLM Service: works with LLM services that support Structured Output (Gemini)
2. Graph Database: Neo4j Database run this in Docker
3. Python Environment: Python 3.10+ required
4. Docker and Docker Compose for running Neo4j in a container

=========
1) What exactly should the agent remember?
(preferences, intent history, product likes/dislikes, order history)

2) What tool results should be saved?
 (Search results, action taken, timestamps)

3) Should memory be session-based or persistent per user?
(persistent per user)
==========

Memory Nodes:

User {id, name, preferences}
ProductQuery {query, timestamp}
ToolCall {tool, params, result, time}
Intent {type, confidence, source}